library(party)
getwd()
setwd("/Users/huatianwang/Downloads")
test<- read.csv("~/Downloads/test.csv")
train<- read.csv("~/Downloads/train.csv")

#assign num_votes/comments/views to test dataset
testset <-test
testset$num_votes <- 0
testset$num_comments <- 0
testset$num_views <- 0
test <- testset

#find na data in train
na_source_train<- subset(train, is.na(train$source))
#find na in test
#test_na_type <- is.na(test$tag_type)
na_source_test<- subset(test, is.na(test$source))


### change longitutue/latitude into city ###
#use professor's sample code
train$city [train$longitude <  -100] <- "Oakland"
train$city [ train$longitude > -90] <- "Chicago"
train$city [ train$longitude > -80] <- "Richmond"
train$city [ train$longitude > -75] <- "New Haven"
train$city<-as.factor(train$city)

test$city [test$longitude <  -100] <- "Oakland"
test$city [test$longitude > -90] <- "Chicago"
test$city [test$longitude > -80] <- "Richmond"
test$city [test$longitude > -75] <- "New Haven"
test$city<-as.factor(test$city)

# predict na source #

train_na <-na.omit(train)
test_na <-na.omit(test)

# prediction for na source #
formula<- source ~ num_views + num_votes + num_comments + city 

source_train <- ctree(formula, data=train_na)
source_test <- ctree(formula, data=test_na)

train$source[is.na(train$source)] <- predict(source_train, newdata = train)[is.na(train$source)]
test$source[is.na(test$source)] <- predict(source_test, newdata = test)[is.na(test$source)]


### check if exists na source ###
train_na_source<-subset(train, is.na(train$source))
test_na_source<-subset(test, is.na(test$source))
